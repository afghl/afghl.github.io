---
layout: post
title:  "学习Spring（一） - IoC原理"
date:   2017-06-11 21:01:00 +0800
---

系统的学习一下Spring原理，这篇首先说的是IoC，IoC是Spring框架最基本最核心的功能，其他任何功能都是基于IoC而存在的。

Spring里一直有一些故弄玄虚的术语，什么IoC、DI、AOP、AOP里又有各种Pointcut、Weave...我建议你不要纠结这些字眼，直接从这个角度思考：这项技术带给我们什么好处？

在这个角度说说IoC是什么：面向对象的思想里，项目代码是一堆对象的合作完成的，有时候这种合作会非常复杂，导致代码难以维护。IoC的作用是：使这些对象之间游离出来：它们只知道这些事：1. 自己要做什么；2. 它要和哪些其他对象合作。绝大部分的对象不知道自己是怎么产生的，如何产生的，也不知道和它合作的对象是怎么产生的，何时产生的。这些信息都交给Spring容器管理，这就是IoC。

### IoC该怎样实现？

先不说Spring，如果要我们自己写个这样的框架，该怎么写？可以这样想想：

- Bean和Bean之间的合作关系既然不写在代码中，那这些信息保存在哪里？
- 容器是什么？

回答第一个问题：IoC是将Bean之间的依赖关系告诉容器，让容器统一管理。而这个告诉的方式一定不是以代码的形式（如果是这样，就不需要这个框架了）。所以可能的方式是：一个文件，一个外部资源，一个URI。 **反正它一定存在于Java 运行时之外的**。

既然在内存之外，我们就需要将它以流的方式读入内存，然后对它做一定的封装，使我们可以读取这些内容的信息，然后处理。

第二个问题：容器当然是一个全局对象。而我们能通过`getBean`方法从它手中获得一个Bean，它应该有个map保存这些beans。第一步从外部读取的信息，最终处理的结果就是存放到这个map里。



### 参考

- http://www.cnblogs.com/ITtangtang/p/3978349.html#a1
