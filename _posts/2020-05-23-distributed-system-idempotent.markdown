---
title:  "分布式系统 - 幂等那些事"
date:   2020-05-23 15:26:00 +0800
tags: [distribute-system,idempotent]
---

在分布式系统中，时刻要想着design for failure。接口调用失败（非业务异常）和超时是最常见的一种错误（fault），而幂等的设计是针对此类问题的容错手段。

再重复一下幂等的定义：

> 在编程中，一个幂等操作的特点是其任意多次执行所产生的影响均与一次执行的影响相同。

简单的理解，就是如果`f(f(x)) = f(x)`，则`f`函数是幂等的。概念很好理解，但在实战中，我们的接口不会是stateless的函数，所以实现上会复杂很多，场景的需要幂等保证的场景有这些：

- 用户领取（单个）优惠，多次领取和一次领取的效果一致。
- 付款请求，同一笔订单，不会出现多次付款。
- 利用mq进行系统间解耦，因为mq不保证消息只投递一次，所以consumer需要考虑多次消费的场景。
- 理论上所有更新操作接口都要考虑幂等性。

先凭印象回顾下常见的幂等实现方案。

### 常见的方案有哪些坑？

- 乐观锁（只考虑了并发，没考虑重复请求）
- 唯一索引
- 利用业务状态机保证
- 业务语义的幂等（但外围的操作，比如发消息这种，怎么避免？）


### 幂等要考虑的问题

- 什么是“同一个操作”？
- 并发的问题 - 分布式互斥
- 非并发的多次执行
- 我们不止希望多次调用的结果一致，还希望额外调用的开销降低

### 幂等号的生成

### 幂等的实现

### 参考

-
